@startuml
namespace model{

class Battle {
    - Battle()
    + void init(List<Army> armies)
    + void run()
    + void addGameObject(GameObject o)
    + void removeGameObject(GameObject o)
    + {static} Battle getInstance()
}

interface Objectif{
    + Army getWinner(Battle context)
}

class Army {
    + addUnit(Unit unit);
    + removeUnit(Unit unit);
}

abstract class GameObject{
    + void setReady()
    + {abstract}void init(Battle context)
    + {abstract}void update(Time deltaTime, Battle context)
    + {abstract}void end(Battle context)
    + void remove()
}

abstract class Entity{
    - int health
    + Stats getStats()
    + void recieveDamage(int health)
}

abstract class Unit {
    + Stats getStats()
    + Stats getRawStats()
    + void addBuff(Buff buff)
    # void getStatBuffVisitor()
    # void getUpdateBuffVisitor(float deltaTime)
}

class Stats {
    void addStat(Statistic stat, double value)
    double getStatisticValue(Statistic stat)
    bool containStat(Statistic stat)
}

interface AI {
    + Action getAction(Unit unit, Battle context)
}

class Vector2{
    - float x
    - float y
    + Vector2 add(Vector2 other)
    + Vector2 sub(Vector2 other)
    + Vector2 inc(Vector2 other)
    + Vector2 dec(Vector2 other)
    + Vector2 scale(float x)
    + float distance()
    + float sqrDistance()
}

interface Action{
    + void execute()
}

interface Buff{
    + void accept(BuffVisitor visitor)
}

interface BuffVisitor<T extends Buff>{
    + void visit(T visitor)
}

interface AttackAction{
    +setTarget(Unit target)
}

interface MoveAction{
    +setTarget(Vector2 target)
}

class UpdateBuffVisitor{
    # float deltaTime
    + void visit(T visitor)
}

class StatsBuffVisitor{
    + void visit(T visitor)
    + Stats getStats()
}

Battle "1" o--> "0..n teams" Army
Battle "1" o--> "0..n objects" GameObject
Battle "1" x--> "1 objectif" Objectif
Unit "1" x--> "1 ai" AI
Unit "1" x--> "0..n buffs" Buff
Entity "1" x--> "1 postion" Vector2
Entity "1" x--> "1 stats" Stats
Battle "1" --> "1 instance "Battle


Army "1 team" o--- "0..n units" Unit

AI ..> Action : "<<uses>>"
Action --|> MoveAction
Action --|> AttackAction
Unit ..> UpdateBuffVisitor : "<<uses>>"
Unit ..> StatsBuffVisitor : "<<uses>>"
BuffVisitor <..> Buff : "<<uses>>"
StatsBuffVisitor o--> "1 computedStats" Stats

Entity ..|> GameObject
StatsBuffVisitor ..|> BuffVisitor
UpdateBuffVisitor ..|> BuffVisitor
Unit --|> Entity
Battle --> PropertyChangeSupport

}

namespace view{

}

namespace controler{

}

view ..|> PropertyChangeListener

model.PropertyChangeSupport o-- PropertyChangeListener
controler x--> model.Battle
@enduml